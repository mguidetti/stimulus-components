{"version":3,"file":"stimulus-components.umd.js","sources":["../lib/uploader.js","../src/activestorage_attachments.js","../src/auto_form.js","../src/details.js","../src/nested_form.js","../src/scroll_lock.js","../src/sortable.js","../src/textarea_autosize.js"],"sourcesContent":["import { DirectUpload } from '@rails/activestorage'\n\nclass Uploader {\n  constructor (file, options) {\n    this.directUpload = new DirectUpload(\n      file,\n      '/rails/active_storage/direct_uploads',\n      this\n    )\n    this.options = options\n  }\n\n  start () {\n    const promise = new Promise((resolve, reject) => {\n      this.directUpload.create((error, blob) => {\n        if (error) {\n          reject(error)\n        } else {\n          resolve(blob.signed_id)\n        }\n      })\n    })\n\n    return promise.then(this.handleSuccess).catch(this.handleError)\n  }\n\n  handleChange = upload => {\n    this.options.onChangeFile(upload)\n  }\n\n  handleProgress = ({ loaded, total }) => {\n    const progress = (loaded / total) * 100\n\n    this.handleChange({\n      state: 'uploading',\n      file: this.directUpload.file,\n      id: this.options.id,\n      progress\n    })\n  }\n\n  handleSuccess = signedId => {\n    this.handleChange({\n      state: 'finished',\n      id: this.options.id,\n      file: this.directUpload.file,\n      signedId\n    })\n    return signedId\n  }\n\n  handleError = error => {\n    this.handleChange({\n      state: 'error',\n      id: this.options.id,\n      file: this.directUpload.file,\n      error\n    })\n    throw error\n  }\n\n  directUploadWillCreateBlobWithXHR (xhr) {\n    this.options.onBeforeBlobRequest &&\n      this.options.onBeforeBlobRequest({\n        id: this.options.id,\n        file: this.directUpload.file,\n        xhr\n      })\n  }\n\n  directUploadWillStoreFileWithXHR (xhr) {\n    this.options.onBeforeStorageRequest &&\n      this.options.onBeforeStorageRequest({\n        id: this.options.id,\n        file: this.directUpload.file,\n        xhr\n      })\n\n    xhr.upload.addEventListener('progress', this.handleProgress)\n  }\n}\n\nexport default Uploader\n","import { Controller } from '@hotwired/stimulus'\nimport Uploader from '../lib/uploader'\n\nexport default class extends Controller {\n  static targets = ['input', 'file', 'count', 'message']\n  static values = {\n    maxFiles: Number,\n    minFiles: Number,\n    maxMb: Number,\n    maxDimension: Number,\n    whitelist: Array\n  }\n\n  get activeFiles () {\n    return this.fileTargets.filter(div => !div.classList.contains('destroying'))\n  }\n\n  handleFileClick () {\n    if (\n      this.hasMaxFilesValue &&\n      this.activeFiles.length >= this.maxFilesValue\n    ) {\n      this.setMessage('alert', `Maximum files allowed: ${this.maxValue}`)\n      return false\n    }\n\n    this.inputTarget.click()\n  }\n\n  async handleNewFiles (event) {\n    const files = Array.from(event.target.files)\n\n    if (\n      this.hasMaxFilesValue &&\n      files.length + this.activeFiles.length > this.maxFilesValue\n    ) {\n      this.setMessage('alert', `Maximum files allowed: ${this.maxValue}`)\n      return false\n    }\n\n    const approvedFiles = await Promise.all(\n      files.map(file => this.approveFile(file))\n    )\n    const results = approvedFiles.filter(Boolean).map(f => f)\n\n    this.submitFiles(results)\n    this.inputTarget.value = null\n  }\n\n  async approveFile (file) {\n    if (this.hasWhitelistValue && !this.whitelistValue.includes(file.type)) {\n      this.setMessage('alert', `Invalid file type: ${file.name}`)\n      return false\n    }\n\n    if (this.hasmaxMbValue && file.size > this.maxMb) {\n      this.setMessage('alert', `File size too large: ${file.name}`)\n      return false\n    }\n\n    if (this.hasMaxDimensionValue) {\n      const largestDimension = await this.getLargestDimension(file)\n\n      if (largestDimension > this.MaxDimensionValue) {\n        this.setMessage('alert', `Dimensions are too lage: ${file.name}`)\n        return false\n      }\n    }\n\n    return file\n  }\n\n  getLargestDimension (file) {\n    return new Promise(resolve => {\n      const img = new Image()\n      img.src = URL.createObjectURL(file)\n\n      img.onload = () => {\n        const largestDimension = Math.max(img.width, img.height)\n        URL.revokeObjectURL(img.src)\n        resolve(largestDimension)\n      }\n    })\n  }\n\n  createAttachment (event) {\n    return this.element.nestedForm.addAssociation(event)\n  }\n\n  removeAttachment (event) {\n    this.element.nestedForm.removeAssociation(event)\n    this.updateCount()\n  }\n\n  submitFiles (files) {\n    files.forEach(file => {\n      const attachment = this.createAttachment()\n\n      const progressHtml = `\n        <div class=\"upload-progress\">\n          <div class=\"progress-bar\"></div>\n        </div>\n      `\n      attachment.insertAdjacentHTML('beforeend', progressHtml)\n      attachment.querySelector('.filename').innerText = file.name\n\n      if (file.type.includes('image') && attachment.querySelector('img')) {\n        attachment.querySelector('img').src = URL.createObjectURL(file)\n      }\n\n      const uploader = new Uploader(file, {\n        id: attachment.dataset.tempId,\n        onChangeFile: this.handleFileProgress\n      })\n\n      uploader.start()\n    })\n  }\n\n  handleFileProgress = event => {\n    const attachment = document.querySelector(`[data-temp-id=\"${event.id}\"]`)\n\n    switch (event.state) {\n      case 'uploading':\n        attachment.querySelector(\n          '.progress-bar'\n        ).style.width = `${event.progress}%`\n        break\n      case 'error':\n        attachment.remove()\n        this.setMessage('alert', `Error uploading ${event.file.name}.`)\n        break\n      case 'finished': {\n        attachment.querySelector('.upload-progress').remove()\n\n        const hiddenSignedIdField = document.createElement('input')\n\n        hiddenSignedIdField.setAttribute('type', 'hidden')\n        hiddenSignedIdField.setAttribute('value', event.signedId)\n        hiddenSignedIdField.name = attachment\n          .querySelector(\"input[name*='_destroy']\")\n          .name.replace(/_destroy/g, 'file')\n\n        attachment.appendChild(hiddenSignedIdField)\n\n        this.updateCount()\n        break\n      }\n      default:\n        break\n    }\n  }\n\n  updateCount () {\n    if (this.hasCountTarget) {\n      this.countTarget.value = this.activeFiles.length\n    }\n  }\n\n  setMessage (type, message) {\n    console.log(message)\n  }\n}\n","/* global history */\n\nimport { Controller } from '@hotwired/stimulus'\nimport { useDebounce } from 'stimulus-use'\n\nexport default class extends Controller {\n  static debounces = ['submitDebounced']\n  static targets = ['form']\n\n  static values = {\n    debounceWait: { type: Number, default: 150 }\n  }\n\n  connect () {\n    useDebounce(this, { wait: this.debounceWaitValue })\n  }\n\n  submit () {\n    this.formTarget.requestSubmit()\n    this.dispatch('submitted')\n  }\n\n  submitDebounced () {\n    this.formTarget.requestSubmit()\n    this.dispatch('submitted')\n  }\n\n  clearInput (event) {\n    event.target.value = ''\n  }\n\n  resetForm () {\n    this.formTarget.reset()\n  }\n\n  clearForm () {\n    const elements = this.formTarget.elements\n    const outsideElements = document.querySelectorAll(\n      `[form=\"${this.formTarget.id}\"`\n    )\n    const allElements = [...elements, ...outsideElements]\n\n    allElements.forEach(element => {\n      switch (element.type) {\n        case 'checkbox':\n        case 'radio':\n          element.checked = false\n          break\n        default:\n          element.value = ''\n          break\n      }\n    })\n  }\n\n  addQueryString (event) {\n    const params = new URLSearchParams(new FormData(event.target))\n\n    history.replaceState(null, null, `?${params}`)\n  }\n}\n","import { Controller } from '@hotwired/stimulus'\n\nexport default class extends Controller {\n  static targets = ['detail']\n\n  expandAll () {\n    this.detailTargets.forEach(element => {\n      element.setAttribute('open', true)\n    })\n\n    this.dispatch('expanded-all')\n  }\n\n  collapseAll () {\n    this.detailTargets.forEach(element => {\n      element.removeAttribute('open')\n    })\n\n    this.dispatch('collapsed-all')\n  }\n\n  collapseOthers (event) {\n    this.detailTargets.forEach(element => {\n      if (element !== event.target) {\n        element.removeAttribute('open')\n      }\n    })\n\n    this.dispatch('collapsed-others')\n  }\n}\n","/* global confirm */\n\nimport { Controller } from '@hotwired/stimulus'\n\nexport default class extends Controller {\n  static targets = ['list', 'item', 'template', 'defaultTemplate', 'message']\n  static values = {\n    replaceKey: { type: String, default: 'NEW_RECORD' },\n    max: Number,\n    min: Number,\n    confirmRemove: Boolean\n  }\n\n  add (event) {\n    if (!this.#approve()) return false\n\n    const content = this.#setContent(event)\n    this.listTarget.insertAdjacentHTML('beforeend', content)\n\n    const addedElement = this.listTarget.lastElementChild\n    this.dispatch('added', { detail: { element: addedElement, previousEvent: event } })\n  }\n\n  replace (event) {\n    // This method doesnt truly \"replace\" the target element. It inserts the new\n    // template directly after it and then remove the original. It would be nicer\n    // To truly replace the element, but mutating the replaceKey with innerHTML\n    // was making that difficult.\n\n    if (!this.#approve()) return false\n\n    const targetElement = event.detail.element\n    const content = this.#setContent(event)\n\n    targetElement.insertAdjacentHTML('afterend', content)\n    const newElement = targetElement.nextElementSibling\n    targetElement.remove()\n\n    this.dispatch('replaced', { detail: { element: newElement, previousEvent: event } })\n  }\n\n  remove (event) {\n    if (this.confirmRemoveValue) {\n      if (confirm('Are you sure?') === false) {\n        return false\n      }\n    }\n\n    const wrapper = event.target.closest(\"[data-nested-form-target='item']\")\n\n    // New records are simply removed from the page\n    if (wrapper.dataset.newRecord === 'true') {\n      wrapper.remove()\n\n    // Existing records are hidden and flagged for deletion\n    } else {\n      wrapper.querySelector(\"input[name*='_destroy']\").value = 1\n      wrapper.classList.add('hidden', 'destroying')\n    }\n\n    this.dispatch('removed')\n  }\n\n  #findTemplate (name) {\n    const found = this.templateTargets.find(element => element.dataset.templateName === name)\n\n    return found || this.defaultTemplateTarget || this.templateTarget\n  }\n\n  #setContent (event) {\n    const template = this.#findTemplate(event?.target?.value || event?.detail?.template)\n    const tempId = Date.now() * Math.floor(Math.random() * 100)\n    const content = template.innerHTML.replace(\n      new RegExp(this.replaceKeyValue, 'g'), tempId\n    )\n\n    return content\n  }\n\n  #approve () {\n    if (this.hasMaxValue && this.#activeItems.length >= this.maxValue) {\n      console.warn('alert', `Maximum allowed: ${this.maxValue}`)\n      return false\n    } else {\n      return true\n    }\n  }\n\n  get #activeItems () {\n    return this.itemTargets.filter(div => !div.classList.contains('destroying'))\n  }\n}\n","import { Controller } from '@hotwired/stimulus'\n\nexport default class extends Controller {\n  static values = {\n    maxWidth: Number,\n    locked: { type: Boolean, default: false }\n  }\n\n  lock () {\n    this.changeLockedValue(true)\n  }\n\n  unlock () {\n    this.changeLockedValue(false)\n  }\n\n  toggle () {\n    this.changeLockedValue(!this.lockedValue)\n  }\n\n  changeLockedValue (value) {\n    if (!this.checkWidth()) return false\n    this.lockedValue = value\n  }\n\n  lockedValueChanged () {\n    if (this.lockedValue) {\n      document.documentElement.style.overflow = 'hidden'\n    } else {\n      document.documentElement.style.overflow = null\n    }\n  }\n\n  checkWidth () {\n    if (!this.hasMaxWidthValue) return true\n\n    const mediaQuery = window.matchMedia(`(max-width: ${this.maxWidthValue}px)`)\n\n    return mediaQuery.matches\n  }\n}\n","import { Controller } from '@hotwired/stimulus'\nimport Sortable from 'sortablejs'\nimport { v4 as uuidv4 } from 'uuid'\n\nexport default class extends Controller {\n  static targets = ['position']\n  static values = {\n    options: Object\n  }\n\n  initialize() {\n    const defaultOptions = {\n      group: uuidv4(),\n      animation: 150,\n      filter: 'input, button, select, textarea',\n      ghostClass: 'opacity-25',\n      preventOnFilter: false,\n      forceFallback: true\n    }\n\n    this.sortable = Sortable.create(this.element, {\n      ...{ ...defaultOptions, ...this.optionsValue },\n      onSort: this.onSort.bind(this),\n    })\n  }\n\n  update() {\n    this.dispatch(\"update\")\n    this.positionTargets.forEach((position, index) => (position.value = index))\n  }\n\n  onSort(e) {\n    const event = this.dispatch(\"sort\", { detail: { event: e }, cancelable: true })\n    if (event.defaultPrevented) return\n\n    this.update()\n  }\n}\n","import { Controller } from '@hotwired/stimulus'\nimport autosize from 'autosize'\n\nexport default class extends Controller {\n  connect () {\n    autosize(this.element)\n  }\n}\n"],"names":["Uploader","file","options","_this","this","handleChange","upload","onChangeFile","handleProgress","_ref","state","directUpload","id","progress","loaded","total","handleSuccess","signedId","handleError","error","DirectUpload","_proto","prototype","start","_this2","Promise","resolve","reject","create","blob","signed_id","then","directUploadWillCreateBlobWithXHR","xhr","onBeforeBlobRequest","directUploadWillStoreFileWithXHR","onBeforeStorageRequest","addEventListener","_default","_Controller","_len","arguments","length","args","Array","_key","call","apply","concat","handleFileProgress","event","attachment","document","querySelector","style","width","remove","setMessage","name","hiddenSignedIdField","createElement","setAttribute","replace","appendChild","updateCount","_inheritsLoose","handleFileClick","hasMaxFilesValue","activeFiles","maxFilesValue","maxValue","inputTarget","click","handleNewFiles","files","from","target","all","map","approveFile","approvedFiles","results","filter","Boolean","f","submitFiles","value","e","_exit","_this3","hasWhitelistValue","whitelistValue","includes","type","hasmaxMbValue","size","maxMb","_temp","hasMaxDimensionValue","getLargestDimension","largestDimension","MaxDimensionValue","_result","img","Image","src","URL","createObjectURL","onload","Math","max","height","revokeObjectURL","createAttachment","element","nestedForm","addAssociation","removeAttachment","removeAssociation","_this4","forEach","insertAdjacentHTML","innerText","dataset","tempId","hasCountTarget","countTarget","message","console","log","key","get","fileTargets","div","classList","contains","Controller","targets","values","maxFiles","Number","minFiles","maxDimension","whitelist","connect","useDebounce","wait","debounceWaitValue","submit","formTarget","requestSubmit","dispatch","submitDebounced","clearInput","resetForm","reset","clearForm","elements","outsideElements","querySelectorAll","checked","addQueryString","params","URLSearchParams","FormData","history","replaceState","debounces","debounceWait","default","expandAll","detailTargets","collapseAll","removeAttribute","collapseOthers","_findTemplate","_classPrivateFieldLooseKey","_setContent","_approve","_activeItems","Object","defineProperty","_assertThisInitialized","_get_activeItems","set","_approve2","_setContent2","_findTemplate2","add","_classPrivateFieldLooseBase","content","listTarget","detail","lastElementChild","previousEvent","targetElement","newElement","nextElementSibling","confirmRemoveValue","confirm","wrapper","closest","newRecord","templateTargets","find","templateName","defaultTemplateTarget","templateTarget","_event$target","_event$detail","template","Date","now","floor","random","innerHTML","RegExp","replaceKeyValue","hasMaxValue","warn","itemTargets","replaceKey","String","min","confirmRemove","lock","changeLockedValue","unlock","toggle","lockedValue","checkWidth","lockedValueChanged","documentElement","overflow","hasMaxWidthValue","window","matchMedia","maxWidthValue","matches","maxWidth","locked","initialize","defaultOptions","group","uuidv4","v4","animation","ghostClass","preventOnFilter","forceFallback","sortable","Sortable","_extends","optionsValue","onSort","bind","update","positionTargets","position","index","cancelable","defaultPrevented","autosize"],"mappings":"orDAAmD,IAE7CA,eAAQ,WACZ,SAAAA,EAAaC,EAAMC,OAASC,EAAAC,KAAAA,KAuB5BC,aAAe,SAAAC,GACbH,EAAKD,QAAQK,aAAaD,EAC5B,OAEAE,eAAiB,SAAAC,GAGfN,EAAKE,aAAa,CAChBK,MAAO,YACPT,KAAME,EAAKQ,aAAaV,KACxBW,GAAIT,EAAKD,QAAQU,GACjBC,SAPsBJ,EAANK,OAAaL,EAALM,MACU,KAQtC,EAEAC,KAAAA,cAAgB,SAAAC,GAOd,OANAd,EAAKE,aAAa,CAChBK,MAAO,WACPE,GAAIT,EAAKD,QAAQU,GACjBX,KAAME,EAAKQ,aAAaV,KACxBgB,SAAAA,IAEKA,CACT,EAACb,KAEDc,YAAc,SAAAC,GAOZ,MANAhB,EAAKE,aAAa,CAChBK,MAAO,QACPE,GAAIT,EAAKD,QAAQU,GACjBX,KAAME,EAAKQ,aAAaV,KACxBkB,MAAAA,IAEIA,CACR,EAvDEf,KAAKO,aAAe,IAAIS,eACtBnB,EACA,uCACAG,MAEFA,KAAKF,QAAUA,CACjB,CAAC,IAAAmB,EAAArB,EAAAsB,iBAAAD,EAEDE,MAAA,eAASC,EAAApB,KAWP,OAVgB,IAAIqB,QAAQ,SAACC,EAASC,GACpCH,EAAKb,aAAaiB,OAAO,SAACT,EAAOU,GAC3BV,EACFQ,EAAOR,GAEPO,EAAQG,EAAKC,UAEjB,EACF,GAEeC,KAAK3B,KAAKY,eAAoB,MAACZ,KAAKc,YACrD,EAACG,EAqCDW,kCAAA,SAAmCC,GACjC7B,KAAKF,QAAQgC,qBACX9B,KAAKF,QAAQgC,oBAAoB,CAC/BtB,GAAIR,KAAKF,QAAQU,GACjBX,KAAMG,KAAKO,aAAaV,KACxBgC,IAAAA,GAEN,EAACZ,EAEDc,iCAAA,SAAkCF,GAChC7B,KAAKF,QAAQkC,wBACXhC,KAAKF,QAAQkC,uBAAuB,CAClCxB,GAAIR,KAAKF,QAAQU,GACjBX,KAAMG,KAAKO,aAAaV,KACxBgC,IAAAA,IAGJA,EAAI3B,OAAO+B,iBAAiB,WAAYjC,KAAKI,eAC/C,EAACR,CAAA,CA7EW,GCDwBsC,eAAAC,SAAAA,GAAA,SAAAD,IAAA,IAAA,IAAAnC,EAAAqC,EAAAC,UAAAC,OAAAC,EAAAC,IAAAA,MAAAJ,GAAAK,EAAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAsJnC1C,OAtJmCA,EAAAoC,EAAAO,KAAAC,MAAAR,EAAAS,CAAAA,MAAAA,OAAAL,KAAAxC,MAsHpC8C,mBAAqB,SAAAC,GACnB,IAAMC,EAAaC,SAASC,cAAa,kBAAmBH,EAAMtC,GAAE,MAEpE,OAAQsC,EAAMxC,OACZ,IAAK,YACHyC,EAAWE,cACT,iBACAC,MAAMC,MAAWL,EAAMrC,SAAQ,IACjC,MACF,IAAK,QACHsC,EAAWK,SACXrD,EAAKsD,WAAW,QAAO,mBAAqBP,EAAMjD,KAAKyD,KAAI,KAC3D,MACF,IAAK,WACHP,EAAWE,cAAc,oBAAoBG,SAE7C,IAAMG,EAAsBP,SAASQ,cAAc,SAEnDD,EAAoBE,aAAa,OAAQ,UACzCF,EAAoBE,aAAa,QAASX,EAAMjC,UAChD0C,EAAoBD,KAAOP,EACxBE,cAAc,2BACdK,KAAKI,QAAQ,YAAa,QAE7BX,EAAWY,YAAYJ,GAEvBxD,EAAK6D,cAMX,EAAC7D,CAAA,CAtJmC8D,EAAA3B,EAAAC,GAsJnClB,QAAAA,EAAAiB,EAAAhB,UAxIA,OAwIAD,EAtID6C,gBAAA,WACE,GACE9D,KAAK+D,kBACL/D,KAAKgE,YAAY1B,QAAUtC,KAAKiE,cAGhC,OADAjE,KAAKqD,WAAW,QAAmC,0BAAArD,KAAKkE,WACjD,EAGTlE,KAAKmE,YAAYC,OACnB,EAACnD,EAEKoD,eAAcA,SAAEvB,GAAK,QAAE1B,EAIzBpB,KAHIsE,EAAQ9B,MAAM+B,KAAKzB,EAAM0B,OAAOF,OAEtC,OACElD,EAAK2C,kBACLO,EAAMhC,OAASlB,EAAK4C,YAAY1B,OAASlB,EAAK6C,eAE9C7C,EAAKiC,WAAW,kCAAmCjC,EAAK8C,UACxD7C,QAAAC,SAAO,IACRD,QAAAC,QAE2BD,QAAQoD,IAClCH,EAAMI,IAAI,SAAA7E,GAAQ,OAAAuB,EAAKuD,YAAY9E,EAAK,KACzC8B,KAAA,SAFKiD,GAGN,IAAMC,EAAUD,EAAcE,OAAOC,SAASL,IAAI,SAAAM,GAAK,OAAAA,CAAC,GAExD5D,EAAK6D,YAAYJ,GACjBzD,EAAK+C,YAAYe,MAAQ,IAAI,EAC/B,CAAC,MAAAC,GAAA,OAAA9D,QAAAE,OAAA4D,EAAA,CAAA,EAAAlE,EAEK0D,YAAWA,SAAE9E,GAAI,IAAEuF,IAAAA,EAAAC,EACnBrF,KAAJ,GAAIqF,EAAKC,oBAAsBD,EAAKE,eAAeC,SAAS3F,EAAK4F,MAE/D,OADAJ,EAAKhC,WAAW,QAA+BxD,sBAAAA,EAAKyD,MACpDjC,QAAAC,SAAO,GAGT,GAAI+D,EAAKK,eAAiB7F,EAAK8F,KAAON,EAAKO,MAEzC,OADAP,EAAKhC,WAAW,QAAiCxD,wBAAAA,EAAKyD,MACtDjC,QAAAC,SAAO,GACR,IAAAuE,EAAA,WAAA,GAEGR,EAAKS,qBAAoB,OAAAzE,QAAAC,QACI+D,EAAKU,oBAAoBlG,IAAK8B,KAAA,SAAvDqE,GAAgB,GAElBA,EAAmBX,EAAKY,kBAEnB,OADPZ,EAAKhC,WAAW,QAAqCxD,4BAAAA,EAAKyD,MAAO8B,EAC1D,GAAA,CAAK/D,EAAAA,CAPf,GAOeA,OAAAA,QAAAC,QAAAuE,GAAAA,EAAAlE,KAAAkE,EAAAlE,KAAA,SAAAuE,GAAA,OAAAd,EAAAc,EAITrG,CAAI,GAAAuF,EAAAS,EAAJhG,EACT,CAAC,MAAAsF,GAAA9D,OAAAA,QAAAE,OAAA4D,EAAAlE,CAAAA,EAAAA,EAED8E,oBAAA,SAAqBlG,GACnB,OAAO,IAAIwB,QAAQ,SAAAC,GACjB,IAAM6E,EAAM,IAAIC,MAChBD,EAAIE,IAAMC,IAAIC,gBAAgB1G,GAE9BsG,EAAIK,OAAS,WACX,IAAMR,EAAmBS,KAAKC,IAAIP,EAAIhD,MAAOgD,EAAIQ,QACjDL,IAAIM,gBAAgBT,EAAIE,KACxB/E,EAAQ0E,EACV,CACF,EACF,EAAC/E,EAED4F,iBAAA,SAAkB/D,GAChB,OAAW9C,KAAC8G,QAAQC,WAAWC,eAAelE,EAChD,EAAC7B,EAEDgG,iBAAA,SAAkBnE,GAChB9C,KAAK8G,QAAQC,WAAWG,kBAAkBpE,GAC1C9C,KAAK4D,aACP,EAAC3C,EAEDgE,YAAA,SAAaX,GAAO,IAAA6C,EAAAnH,KAClBsE,EAAM8C,QAAQ,SAAAvH,GACZ,IAAMkD,EAAaoE,EAAKN,mBAOxB9D,EAAWsE,mBAAmB,YALZ,+GAMlBtE,EAAWE,cAAc,aAAaqE,UAAYzH,EAAKyD,KAEnDzD,EAAK4F,KAAKD,SAAS,UAAYzC,EAAWE,cAAc,SAC1DF,EAAWE,cAAc,OAAOoD,IAAMC,IAAIC,gBAAgB1G,IAG3C,IAAID,EAASC,EAAM,CAClCW,GAAIuC,EAAWwE,QAAQC,OACvBrH,aAAcgH,EAAKtE,qBAGZ1B,OACX,EACF,EAACF,EAoCD2C,YAAA,WACM5D,KAAKyH,iBACPzH,KAAK0H,YAAYxC,MAAQlF,KAAKgE,YAAY1B,OAE9C,EAACrB,EAEDoC,WAAA,SAAYoC,EAAMkC,GAChBC,QAAQC,IAAIF,EACd,IAACzF,KAAA,CAAA,CAAA4F,IAAA,cAAAC,IApJD,WACE,OAAW/H,KAACgI,YAAYlD,OAAO,SAAAmD,UAAQA,EAAIC,UAAUC,SAAS,aAAa,EAC7E,gPAACjG,CAAA,CAdmCC,CAETiG,EAAUA,YAAAlG,EAC9BmG,QAAU,CAAC,QAAS,OAAQ,QAAS,WAAUnG,EAC/CoG,OAAS,CACdC,SAAUC,OACVC,SAAUD,OACV5C,MAAO4C,OACPE,aAAcF,OACdG,UAAWnG,OCP2B,IAAAN,eAAAC,SAAAA,GAAA,SAAAD,IAAA,OAAAC,EAAAQ,MAAAN,KAAAA,YAAApB,IAAAA,CAAA4C,EAAA3B,EAAAC,GAAAlB,IAAAA,EAAAiB,EAAAhB,UAwDvC,OAxDuCD,EAUxC2H,QAAA,WACEC,EAAAA,YAAY7I,KAAM,CAAE8I,KAAM9I,KAAK+I,mBACjC,EAAC9H,EAED+H,OAAA,WACEhJ,KAAKiJ,WAAWC,gBAChBlJ,KAAKmJ,SAAS,YAChB,EAAClI,EAEDmI,gBAAA,WACEpJ,KAAKiJ,WAAWC,gBAChBlJ,KAAKmJ,SAAS,YAChB,EAAClI,EAEDoI,WAAA,SAAYvG,GACVA,EAAM0B,OAAOU,MAAQ,EACvB,EAACjE,EAEDqI,UAAA,WACEtJ,KAAKiJ,WAAWM,OAClB,EAACtI,EAEDuI,UAAA,WACE,IAAMC,EAAWzJ,KAAKiJ,WAAWQ,SAC3BC,EAAkB1G,SAAS2G,iBAAgB,UACrC3J,KAAKiJ,WAAWzI,GAC5B,QACiBoC,OAAO6G,EAAaC,GAEzBtC,QAAQ,SAAAN,GAClB,OAAQA,EAAQrB,MACd,IAAK,WACL,IAAK,QACHqB,EAAQ8C,SAAU,EAClB,MACF,QACE9C,EAAQ5B,MAAQ,GAGtB,EACF,EAACjE,EAED4I,eAAA,SAAgB/G,GACd,IAAMgH,EAAS,IAAIC,gBAAgB,IAAIC,SAASlH,EAAM0B,SAEtDyF,QAAQC,aAAa,KAAM,SAAUJ,EACvC,EAAC5H,CAAA,CAxDuCC,CAEbiG,EAAAA,YAAUlG,EAC9BiI,UAAY,CAAC,mBAAkBjI,EAC/BmG,QAAU,CAAC,QAAOnG,EAElBoG,OAAS,CACd8B,aAAc,CAAE3E,KAAM+C,OAAQ6B,QAAS,MCVInI,IAAAA,wBAAAC,GAAAD,SAAAA,WAAAC,EAAAQ,MAAA3C,KAAAqC,YAAApB,IAAAA,CAAA4C,EAAA3B,EAAAC,GAAAlB,IAAAA,EAAAiB,EAAAhB,UA6B5C,OA7B4CD,EAK7CqJ,UAAA,WACEtK,KAAKuK,cAAcnD,QAAQ,SAAAN,GACzBA,EAAQrD,aAAa,QAAQ,EAC/B,GAEAzD,KAAKmJ,SAAS,eAChB,EAAClI,EAEDuJ,YAAA,WACExK,KAAKuK,cAAcnD,QAAQ,SAAAN,GACzBA,EAAQ2D,gBAAgB,OAC1B,GAEAzK,KAAKmJ,SAAS,gBAChB,EAAClI,EAEDyJ,eAAA,SAAgB5H,GACd9C,KAAKuK,cAAcnD,QAAQ,SAAAN,GACrBA,IAAYhE,EAAM0B,QACpBsC,EAAQ2D,gBAAgB,OAE5B,GAEAzK,KAAKmJ,SAAS,mBAChB,EAACjH,CAAA,EA3B0BkG,EAAAA,YAAUlG,EAC9BmG,QAAU,CAAC,UCD2BsC,IAAAA,eAAAC,EAAA,gBAAAC,eAAAD,EAAAE,cAAAA,eAAAF,aAAAG,eAAAH,EAAA,eAAA1I,eAAAC,SAAAA,GAAA,SAAAD,QAAAnC,IAAAA,EAAAqC,EAAAC,UAAAC,OAAAC,MAAAC,MAAAJ,GAAAK,EAAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAA1C,EAAAoC,EAAAO,KAAAC,MAAAR,EAAA,CAAAnC,MAAA4C,OAAAL,UAAAyI,OAAAC,eAAAC,EAAAnL,GAAAgL,EAAA,CAAAhD,IAAAoD,EAAAC,SAAAJ,IAAAA,OAAAC,eAAAC,EAAAnL,GAAA+K,EAAA5F,CAAAA,MAAAmG,IAAAL,OAAAC,eAAAC,EAAAnL,GAAA8K,EAAA,CAAA3F,MAAAoG,IAAAN,OAAAC,eAAAC,EAAAnL,GAAA4K,GAAAzF,MAAAqG,IAAAxL,CAAA,CAAA8D,EAAA3B,EAAAC,GAAAlB,IAAAA,EAAAiB,EAAAhB,iBAAAD,EAW7CuK,IAAA,SAAK1I,GACH,IAAI2I,EAACzL,KAAI8K,GAAAA,KAAa,OAAO,EAE7B,IAAMY,EAAOD,EAAGzL,KAAI6K,GAAAA,GAAa/H,GACjC9C,KAAK2L,WAAWtE,mBAAmB,YAAaqE,GAGhD1L,KAAKmJ,SAAS,QAAS,CAAEyC,OAAQ,CAAE9E,QADd9G,KAAK2L,WAAWE,iBACqBC,cAAehJ,IAC3E,EAAC7B,EAEDyC,QAAA,SAASZ,GAMP,IAAI2I,EAACzL,KAAI8K,GAAAA,KAAa,SAEtB,IAAMiB,EAAgBjJ,EAAM8I,OAAO9E,QAC7B4E,EAAOD,EAAGzL,KAAI6K,GAAAA,GAAa/H,GAEjCiJ,EAAc1E,mBAAmB,WAAYqE,GAC7C,IAAMM,EAAaD,EAAcE,mBACjCF,EAAc3I,SAEdpD,KAAKmJ,SAAS,WAAY,CAAEyC,OAAQ,CAAE9E,QAASkF,EAAYF,cAAehJ,IAC5E,EAAC7B,EAEDmC,OAAA,SAAQN,GACN,GAAI9C,KAAKkM,qBAC0B,IAA7BC,QAAQ,iBACV,OAAO,EAIX,IAAMC,EAAUtJ,EAAM0B,OAAO6H,QAAQ,oCAGH,SAA9BD,EAAQ7E,QAAQ+E,UAClBF,EAAQhJ,UAIRgJ,EAAQnJ,cAAc,2BAA2BiC,MAAQ,EACzDkH,EAAQlE,UAAUsD,IAAI,SAAU,eAGlCxL,KAAKmJ,SAAS,UAChB,EAACjH,CAAA,CA3D4CC,CAElBiG,EAAAA,YAAUmD,SAAAA,EA2DtBjI,GAGb,OAFctD,KAAKuM,gBAAgBC,KAAK,SAAA1F,UAAWA,EAAQS,QAAQkF,eAAiBnJ,CAAI,IAExEtD,KAAK0M,uBAAyB1M,KAAK2M,cACrD,CAAC,SAAArB,EAEYxI,GAAO8J,IAAAA,EAAAC,EACZC,EAAQrB,EAAGzL,KAAI2K,GAAAA,IAAoB,MAAL7H,UAAK8J,EAAL9J,EAAO0B,eAAPoI,EAAe1H,SAAc2H,MAAL/J,GAAa,OAAR+J,EAAL/J,EAAO8I,aAAM,EAAbiB,EAAeC,WACrEtF,EAASuF,KAAKC,MAAQvG,KAAKwG,MAAsB,IAAhBxG,KAAKyG,UAK5C,OAJgBJ,EAASK,UAAUzJ,QACjC,IAAI0J,OAAOpN,KAAKqN,gBAAiB,KAAM7F,EAI3C,CAAC,SAAA6D,IAGC,QAAIrL,KAAKsN,aAAe7B,EAAIzL,KAAA+K,GAAAA,GAAczI,QAAUtC,KAAKkE,WACvD0D,QAAQ2F,KAAK,QAA6B,oBAAAvN,KAAKkE,aAKnD,CAAC,SAAAiH,IAGC,YAAYqC,YAAY1I,OAAO,SAAAmD,UAAQA,EAAIC,UAAUC,SAAS,aAAa,EAC7E,CAACjG,EArFMmG,QAAU,CAAC,OAAQ,OAAQ,WAAY,kBAAmB,WAAUnG,EACpEoG,OAAS,CACdmF,WAAY,CAAEhI,KAAMiI,OAAQrD,QAAS,cACrC3D,IAAK8B,OACLmF,IAAKnF,OACLoF,cAAe7I,SCV4B7C,IAAAA,eAAAC,SAAAA,GAAA,SAAAD,IAAAC,OAAAA,EAAAQ,MAAA3C,KAAAqC,YAAArC,IAAA,CAAA6D,EAAA3B,EAAAC,GAAA,IAAAlB,EAAAiB,EAAAhB,UAuC5C,OAvC4CD,EAQ7C4M,KAAA,WACE7N,KAAK8N,mBAAkB,EACzB,EAAC7M,EAED8M,OAAA,WACE/N,KAAK8N,mBAAkB,EACzB,EAAC7M,EAED+M,OAAA,WACEhO,KAAK8N,mBAAmB9N,KAAKiO,YAC/B,EAAChN,EAED6M,kBAAA,SAAmB5I,GACjB,IAAKlF,KAAKkO,aAAc,SACxBlO,KAAKiO,YAAc/I,CACrB,EAACjE,EAEDkN,mBAAA,WAEInL,SAASoL,gBAAgBlL,MAAMmL,SAD7BrO,KAAKiO,YACmC,SAEA,IAE9C,EAAChN,EAEDiN,WAAA,WACE,OAAKlO,KAAKsO,kBAESC,OAAOC,WAA0B,eAAAxO,KAAKyO,cAAa,OAEpDC,OACpB,EAACxM,CAAA,CAvC4CC,CAElBiG,EAAAA,YAAUlG,EAC9BoG,OAAS,CACdqG,SAAUnG,OACVoG,OAAQ,CAAEnJ,KAAMV,QAASsF,SAAS,ICHHnI,IAAAA,wBAAAC,GAAAD,SAAAA,IAAAC,OAAAA,EAAAQ,WAAAN,YAAArC,IAAA,CAAA6D,EAAA3B,EAAAC,GAAA,IAAAlB,EAAAiB,EAAAhB,UAkChC,OAlCgCD,EAQjC4N,WAAA,WACE,IAAMC,EAAiB,CACrBC,MAAOC,EAAMC,KACbC,UAAW,IACXpK,OAAQ,kCACRqK,WAAY,aACZC,iBAAiB,EACjBC,eAAe,GAGjBrP,KAAKsP,SAAWC,EAAQ,QAAC/N,OAAOxB,KAAK8G,QAAO0I,EAAAA,CAAAA,EAAAA,KAClCV,EAAmB9O,KAAKyP,cAAY,CAC5CC,OAAQ1P,KAAK0P,OAAOC,KAAK3P,QAE7B,EAACiB,EAED2O,OAAA,WACE5P,KAAKmJ,SAAS,UACdnJ,KAAK6P,gBAAgBzI,QAAQ,SAAC0I,EAAUC,GAAW,OAAAD,EAAS5K,MAAQ6K,CAAK,EAC3E,EAAC9O,EAEDyO,OAAA,SAAOvK,GACSnF,KAAKmJ,SAAS,OAAQ,CAAEyC,OAAQ,CAAE9I,MAAOqC,GAAK6K,YAAY,IAC9DC,kBAEVjQ,KAAK4P,QACP,EAAC1N,CAAA,EAhC0BkG,EAAAA,YAAUlG,EAC9BmG,QAAU,CAAC,YAAWnG,EACtBoG,OAAS,CACdxI,QAASkL,QCNkB9I,IAAAA,eAAAC,SAAAA,GAAA,SAAAD,IAAA,OAAAC,EAAAQ,MAAA3C,KAAAqC,YAAArC,IAAA,CAK5B,OAL4B6D,EAAA3B,EAAAC,GAAAD,EAAAhB,UAG7B0H,QAAA,WACEsH,EAAQ,QAAClQ,KAAK8G,QAChB,EAAC5E,CAAA,CAL4BC,CAEFiG,EAAUA"}