{"version":3,"file":"stimulus-components.modern.js","sources":["../src/uploader.js","../src/activestorage-attachments.js","../src/nested-form.js","../src/sortable.js"],"sourcesContent":["import { DirectUpload } from '@rails/activestorage'\n\nclass Uploader {\n  constructor (file, options) {\n    this.directUpload = new DirectUpload(\n      file,\n      '/rails/active_storage/direct_uploads',\n      this\n    )\n    this.options = options\n  }\n\n  start () {\n    const promise = new Promise((resolve, reject) => {\n      this.directUpload.create((error, blob) => {\n        if (error) {\n          reject(error)\n        } else {\n          resolve(blob.signed_id)\n        }\n      })\n    })\n\n    return promise.then(this.handleSuccess).catch(this.handleError)\n  }\n\n  handleChange = upload => {\n    this.options.onChangeFile(upload)\n  }\n\n  handleProgress = ({ loaded, total }) => {\n    const progress = (loaded / total) * 100\n\n    this.handleChange({\n      state: 'uploading',\n      file: this.directUpload.file,\n      id: this.options.id,\n      progress\n    })\n  }\n\n  handleSuccess = signedId => {\n    this.handleChange({\n      state: 'finished',\n      id: this.options.id,\n      file: this.directUpload.file,\n      signedId\n    })\n    return signedId\n  }\n\n  handleError = error => {\n    this.handleChange({\n      state: 'error',\n      id: this.options.id,\n      file: this.directUpload.file,\n      error\n    })\n    throw error\n  }\n\n  directUploadWillCreateBlobWithXHR (xhr) {\n    this.options.onBeforeBlobRequest &&\n      this.options.onBeforeBlobRequest({\n        id: this.options.id,\n        file: this.directUpload.file,\n        xhr\n      })\n  }\n\n  directUploadWillStoreFileWithXHR (xhr) {\n    this.options.onBeforeStorageRequest &&\n      this.options.onBeforeStorageRequest({\n        id: this.options.id,\n        file: this.directUpload.file,\n        xhr\n      })\n\n    xhr.upload.addEventListener('progress', this.handleProgress)\n  }\n}\n\nexport default Uploader\n","import { Controller } from '@hotwired/stimulus'\nimport Uploader from './uploader'\n\nexport default class extends Controller {\n  static targets = ['input', 'file', 'count', 'message']\n  static values = {\n    maxFiles: Number,\n    minFiles: Number,\n    maxMb: Number,\n    maxDimension: Number,\n    whitelist: Array\n  }\n\n  get activeFiles () {\n    return this.fileTargets.filter(div => !div.classList.contains('destroying'))\n  }\n\n  handleFileClick () {\n    if (\n      this.hasMaxFilesValue &&\n      this.activeFiles.length >= this.maxFilesValue\n    ) {\n      setMessage('alert', `Maximum files allowed: ${this.maxValue}`)\n      return false\n    }\n\n    this.inputTarget.click()\n  }\n\n  async handleNewFiles (event) {\n    const files = Array.from(event.target.files)\n\n    if (\n      this.hasMaxFilesValue &&\n      files.length + this.activeFiles.length > this.maxFilesValue\n    ) {\n      setMessage('alert', `Maximum files allowed: ${this.maxValue}`)\n      return false\n    }\n\n    const approvedFiles = await Promise.all(\n      files.map(file => this.approveFile(file))\n    )\n    const results = approvedFiles.filter(Boolean).map(f => f)\n\n    this.submitFiles(results)\n    this.inputTarget.value = null\n  }\n\n  async approveFile (file) {\n    if (this.hasWhitelistValue && !this.whitelistValue.includes(file.type)) {\n      setMessage('alert', `Invalid file type: ${file.name}`)\n      return false\n    }\n\n    if (this.hasmaxMbValue && file.size > this.maxMb) {\n      setMessage('alert', `File size too large: ${file.name}`)\n      return false\n    }\n\n    if (this.hasMaxDimensionValue) {\n      const largestDimension = await this.getLargestDimension(file)\n\n      if (largestDimension > this.MaxDimensionValue) {\n        setMessage('alert', `Dimensions are too lage: ${file.name}`)\n        return false\n      }\n    }\n\n    return file\n  }\n\n  getLargestDimension (file) {\n    return new Promise(resolve => {\n      const img = new Image()\n      img.src = URL.createObjectURL(file)\n\n      img.onload = () => {\n        const largestDimension = Math.max(img.width, img.height)\n        URL.revokeObjectURL(img.src)\n        resolve(largestDimension)\n      }\n    })\n  }\n\n  createAttachment (event) {\n    return this.element.nestedForm.addAssociation(event)\n  }\n\n  removeAttachment (event) {\n    this.element.nestedForm.removeAssociation(event)\n    this.updateCount()\n  }\n\n  submitFiles (files) {\n    files.forEach(file => {\n      const attachment = this.createAttachment()\n\n      const progressHtml = `\n        <div class=\"upload-progress\">\n          <div class=\"progress-bar\"></div>\n        </div>\n      `\n      attachment.insertAdjacentHTML('beforeend', progressHtml)\n      attachment.querySelector('.filename').innerText = file.name\n\n      if (file.type.includes('image') && attachment.querySelector('img')) {\n        attachment.querySelector('img').src = URL.createObjectURL(file)\n      }\n\n      const uploader = new Uploader(file, {\n        id: attachment.dataset.tempId,\n        onChangeFile: this.handleFileProgress\n      })\n\n      uploader.start()\n    })\n  }\n\n  handleFileProgress = event => {\n    const attachment = document.querySelector(`[data-temp-id=\"${event.id}\"]`)\n\n    switch (event.state) {\n      case 'uploading':\n        attachment.querySelector(\n          '.progress-bar'\n        ).style.width = `${event.progress}%`\n        break\n      case 'error':\n        attachment.remove()\n        setMessage('alert', `Error uploading ${event.file.name}.`)\n        break\n      case 'finished': {\n        attachment.querySelector('.upload-progress').remove()\n\n        const hiddenSignedIdField = document.createElement('input')\n\n        hiddenSignedIdField.setAttribute('type', 'hidden')\n        hiddenSignedIdField.setAttribute('value', event.signedId)\n        hiddenSignedIdField.name = attachment\n          .querySelector(\"input[name*='_destroy']\")\n          .name.replace(/_destroy/g, 'file')\n\n        attachment.appendChild(hiddenSignedIdField)\n\n        this.updateCount()\n        break\n      }\n      default:\n        break\n    }\n  }\n\n  updateCount () {\n    if (this.hasCountTarget) {\n      this.countTarget.value = this.activeFiles.length\n    }\n  }\n\n  setMessage (type, message) {\n    console.log(message)\n  }\n}\n","import { Controller } from '@hotwired/stimulus'\n\nexport default class extends Controller {\n  static targets = ['list', 'item', 'template', 'message']\n  static values = {\n    replaceKey: String,\n    max: Number,\n    min: Number\n  }\n\n  initialize () {\n    this.element.nestedForm = this\n  }\n\n  connect () {\n    this.replaceKey = this.replaceKeyValue || 'NEW_RECORD'\n  }\n\n  get activeItems () {\n    return this.itemTargets.filter(div => !div.classList.contains('destroying'))\n  }\n\n  findTemplate (name) {\n    return name\n      ? this.templateTargets.find(\n          element => element.dataset.templateName == name\n        )\n      : this.templateTarget\n  }\n\n  addAssociation (event) {\n    if (this.hasMaxValue && this.activeItems.length >= this.maxValue) {\n      setMessage('alert', `Maximum allowed: ${this.maxValue}`)\n      return false\n    }\n\n    const template =\n      typeof event === 'undefined'\n        ? this.templateTarget\n        : this.findTemplate(event.target.value)\n\n    const tempId = Date.now() * Math.floor(Math.random() * 100)\n    const content = template.innerHTML.replace(\n      new RegExp(this.replaceKey, 'g'),\n      tempId\n    )\n    this.listTarget.insertAdjacentHTML('beforeend', content)\n\n    const newElement = this.listTarget.lastElementChild\n\n    newElement.dataset.tempId = tempId\n\n    if (this.listTarget.sortableController)\n      this.listTarget.sortableController.update()\n\n    return newElement\n  }\n\n  removeAssociation (event) {\n    const wrapper = event.target.closest(\"[data-nested-form-target='item']\")\n\n    // New records are simply removed from the page\n    if (wrapper.dataset.newRecord == 'true') {\n      wrapper.remove()\n\n      // Existing records are hidden and flagged for deletion\n    } else {\n      wrapper.querySelector(\"input[name*='_destroy']\").value = 1\n      wrapper.classList.add('hidden', 'destroying')\n    }\n  }\n\n  setMessage (type, message) {\n    console.log(message)\n  }\n}\n","import { Controller } from '@hotwired/stimulus'\nimport Sortable from 'sortablejs'\nimport { v4 as uuidv4 } from 'uuid'\n\nexport default class extends Controller {\n  static targets = ['position']\n\n  initialize () {\n    this.element.sortableController = this\n\n    this.sortable = Sortable.create(this.element, {\n      group: uuidv4(),\n      animation: 150,\n      onEnd: this.end.bind(this),\n      filter: 'input, button, select, textarea',\n      preventOnFilter: false\n    })\n  }\n\n  update () {\n    this.positionTargets.forEach((position, index) => (position.value = index))\n  }\n\n  end () {\n    this.update()\n  }\n}\n"],"names":["Uploader","constructor","file","options","handleChange","upload","this","onChangeFile","handleProgress","loaded","total","state","directUpload","id","progress","handleSuccess","signedId","handleError","error","DirectUpload","start","Promise","resolve","reject","create","blob","signed_id","then","catch","directUploadWillCreateBlobWithXHR","xhr","onBeforeBlobRequest","directUploadWillStoreFileWithXHR","onBeforeStorageRequest","addEventListener","_class","Controller","args","super","handleFileProgress","event","attachment","document","querySelector","style","width","remove","setMessage","name","hiddenSignedIdField","createElement","setAttribute","replace","appendChild","updateCount","activeFiles","fileTargets","filter","div","classList","contains","handleFileClick","hasMaxFilesValue","length","maxFilesValue","maxValue","inputTarget","click","async","files","Array","from","target","results","all","map","approveFile","Boolean","f","submitFiles","value","hasWhitelistValue","whitelistValue","includes","type","hasmaxMbValue","size","maxMb","hasMaxDimensionValue","getLargestDimension","MaxDimensionValue","img","Image","src","URL","createObjectURL","onload","largestDimension","Math","max","height","revokeObjectURL","createAttachment","element","nestedForm","addAssociation","removeAttachment","removeAssociation","forEach","insertAdjacentHTML","innerText","dataset","tempId","hasCountTarget","countTarget","message","console","log","targets","values","maxFiles","Number","minFiles","maxDimension","whitelist","initialize","connect","replaceKey","replaceKeyValue","activeItems","itemTargets","findTemplate","templateTargets","find","templateName","templateTarget","hasMaxValue","template","Date","now","floor","random","content","innerHTML","RegExp","listTarget","newElement","lastElementChild","sortableController","update","wrapper","closest","newRecord","add","String","min","sortable","Sortable","group","uuidv4","animation","onEnd","end","bind","preventOnFilter","positionTargets","position","index"],"mappings":"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"}